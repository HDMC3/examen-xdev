@model ProductsApp.Models.ProductDetailViewModel;
@{
    ViewData["Title"] = "Nuevo producto";
}

<div class="container-fluid justify-content-center" style="max-width: 75ch">
    
    <div class="mb-3">
        <a id="product-details-back-button" class="btn btn-outline-primary">Volver</a>
    </div>
    <div class="d-flex align-items-center" style="gap: 2rem">
        <h1 class="display-5">@Model.Name</h1>
        <h3>
            <span class="badge bg-success">Q. @Model.Price</span>
        </h3>
    </div>

    <p class="mt-3 fs-5">
        @Model.Description
    </p>

    <div class="text-muted text-end mt-4">
        Producto creado el @Model.Created
    </div>

    <hr class="my-4">

    <div class="d-flex justify-content-center">
        <button id="show-delete-modal-button" type="button" class="btn btn-danger">Eliminar producto</button>
    </div>
</div>

<div class="modal fade" id="delete-product-modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Eliminar producto</h5>
        <button id="close-button" type="button" class="btn-close" aria-label="Close"></button>
      </div>
      <div class="modal-body">
         Se eliminara el producto de forma permanente. Â¿Desea continuar?
      </div>
      <div class="modal-footer">
        <form asp-action="DeleteProduct" asp-controller="Home" method="post">
            @Html.HiddenFor(model => model.Id)
            <button type="submit" class="btn btn-danger">Eliminar</button>
        </form>
        <button id="cancel-button" type="button" class="btn btn-secondary">Cancelar</button>
      </div>
    </div>
  </div>
</div>

<script>
    const backButton = document.querySelector('#product-details-back-button');

    backButton.onclick = () => {
        history.go(-1);
    }
</script>
